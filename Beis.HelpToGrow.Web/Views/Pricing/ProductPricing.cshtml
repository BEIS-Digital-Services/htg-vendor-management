@using Beis.HelpToGrow.Web.Constants
@model Beis.HelpToGrow.Web.Models.ProductPriceDetailsViewModel;
@{
    ViewData["Title"] = "Product Pricing";
}

@section Authentication {
    <partial name="_Authentication" />
}

<a class="govuk-back-link" href="@Url.RouteUrl(RouteNameConstants.SoftwareHomeGet, new { id = Model.ProductId }, @Context.Request.Scheme)">
    Back
</a>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        <span class="govuk-caption-l">@Model.ProductName</span>
        <h1 class="govuk-heading-l">
            Product prices
        </h1>

        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Price title</th>
                    <th scope="col" class="govuk-table__header">Voucher URL</th>
                    <th scope="col" class="govuk-table__header">SKU ID</th>
                    <th scope="col" class="govuk-table__header">Action</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var item in Model.ProductPrices)
                {
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">@item.ProductPriceTitle</td>
                        <td class="govuk-table__cell"><a href="@item.VoucherUrl" target="_blank">@item.VoucherUrl</a></td>
                        <td class="govuk-table__cell">@item.ProductPriceSku</td>
                        <td class="govuk-table__cell">
                            <a class="govuk-link" asp-route="@RouteNameConstants.PricingHomeGet" asp-route-id="@Model.ProductId" asp-route-productPriceId="@item.ProductPriceId">
                                Pricing breakdown
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>